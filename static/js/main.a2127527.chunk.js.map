{"version":3,"sources":["Toggle.js","DarkModeToggle.js","Content.js","App.js","serviceWorker.js","index.js"],"names":["Toggle","_ref","checked","onChange","react_default","a","createElement","className","type","id","htmlFor","DarkModeToggle","darkMode","useDarkMode","onClick","disable","src_Toggle","value","toggle","enable","Content","src_DarkModeToggle","href","src","alt","App","src_Content","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2127527.chunk.js","sourcesContent":["import React from 'react';\n\nconst Toggle = ({ checked, onChange }) => (\n  <span className=\"toggle-control\">\n    <input\n      className=\"dmcheck\"\n      type=\"checkbox\"\n      checked={checked}\n      onChange={onChange}\n      id=\"dmcheck\"\n    />\n    <label htmlFor=\"dmcheck\" />\n  </span>\n);\n\nexport default Toggle;\n","import React from 'react';\n\nimport Toggle from './Toggle';\nimport useDarkMode from 'use-dark-mode';\n\nconst DarkModeToggle = () => {\n  const darkMode = useDarkMode(false);\n\n  return (\n    <div className=\"dark-mode-toggle\">\n      <button type=\"button\" onClick={darkMode.disable}>\n        ☀\n      </button>\n      <Toggle checked={darkMode.value} onChange={darkMode.toggle} />\n      <button type=\"button\" onClick={darkMode.enable}>\n        ☾\n      </button>\n    </div>\n  );\n};\n\nexport default DarkModeToggle;\n","import React from \"react\";\nimport DarkModeToggle from \"./DarkModeToggle\";\n\nconst Content = () => (\n  <div className=\"content\">\n    <div className=\"toggle-button-wrapper\">\n      <DarkModeToggle />\n    </div>\n    <div className=\"header\">\n      <span className=\"greeting\">Hi, my name is</span>\n      <br />\n      <span className=\"name\">Danny Nguyen.</span>\n      <br />\n      <span className=\"headline\">I'm a software engineer and designer.</span>\n      <br />\n    </div>\n    <div className=\"section\">\n      <span className=\"section-title\"># LinkedIn, Github, & Resume</span>\n      <br />\n      <br />\n      <div className=\"socials\">\n        <a href=\"https://www.linkedin.com/in/danfordn/\" className=\"icon-link\">\n          <div className=\"icon-linkedin\" />\n        </a>\n        <a href=\"https://github.com/ndanny\" className=\"icon-link\">\n          <div className=\"icon-github\" />\n        </a>\n        <a href=\"papers/Danny_Nguyen_Resume.pdf\" className=\"icon-link\">\n          <div className=\"icon-resume\" />\n        </a>\n      </div>\n    </div>\n    <div className=\"section\">\n      <span className=\"section-title\"># About Me</span>\n      <br />\n      <br />\n      <span className=\"section-body\">\n        I'm currently a Senior at UC Irvine, originally from Sacramento, CA. I\n        am interested in developing exceptional things and solving difficult\n        problems. I come from a diverse background and have a wide array of\n        interests. This Summer I will be interning in NYC for the first time in\n        my life, so I'll be sure to have more updates about that soon :)\n      </span>\n    </div>\n    <div className=\"section\">\n      <span className=\"section-title\"># Places I've Worked At</span>\n      <br />\n      <br />\n      <span className=\"section-body\">\n        <blockquote>\n          <span className=\"company-title\">Amazon</span>\n          <br />\n          <span className=\"position\">Software Development Engineer Intern</span>\n          <br />\n          <span className=\"date\">Summer 2019 (New York, NY)</span>\n        </blockquote>\n        <blockquote>\n          <span className=\"company-title\">Amazon</span>\n          <br />\n          <span className=\"position\">Software Development Engineer Intern</span>\n          <br />\n          <span className=\"date\">Fall 2019 (Seattle, WA)</span>\n        </blockquote>\n        <blockquote>\n          <span className=\"company-title\">Google</span>\n          <br />\n          <span className=\"position\">BOLD Intern</span>\n          <br />\n          <span className=\"date\">Summer 2018 (Boulder, CO)</span>\n        </blockquote>\n      </span>\n    </div>\n    <div className=\"section\">\n      <span className=\"section-title\"># Featured Designs</span>\n      <br />\n      <br />\n      <span className=\"section-body\">\n        More Sketch works <a href=\"https://www.uplabs.com/danford\">here</a>, and\n        my Photoshop works <a href=\"http://danford.portfoliobox.io/\">here</a>.\n      </span>\n    </div>\n    <div className=\"designs\">\n      <a href=\"https://www.uplabs.com/posts/light-theme-spotify-ui-design\">\n        <img\n          src=\"imgs/spotify.png\"\n          className=\"design-img\"\n          alt=\"Spotify-Design\"\n        />\n      </a>\n      <br />\n      <a href=\"https://www.uplabs.com/posts/iphone-xs-payment-app\">\n        <img\n          src=\"imgs/payment.png\"\n          className=\"design-img\"\n          alt=\"Payment-Design\"\n        />\n      </a>\n      <br />\n      <a href=\"http://danford.portfoliobox.io/\">\n        <img\n          src=\"imgs/hyperloop.png\"\n          className=\"design-img\"\n          alt=\"Hyperloop-Design\"\n        />\n      </a>\n    </div>\n  </div>\n);\n\nexport default Content;\n","import React from 'react';\nimport Content from './Content';\nimport './styles.scss';\n\nfunction App() {\n  return <Content />;\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}